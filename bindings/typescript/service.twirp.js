"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.createXyzzyData = exports.XyzzyDataPathPrefix = void 0;
// Generated by protoc-gen-twirp_typescript. DO NOT EDIT
var service_pb_1 = require("./service.pb");
var pbjs_twirp_1 = require("pbjs-twirp");
var axios_1 = require("axios");
var getServiceMethodName = function (fn) {
    if (fn === service_pb_1.xyzzy.XyzzyData.prototype.ping) {
        return 'Ping';
    }
    throw new Error('Unknown Method');
};
exports.XyzzyDataPathPrefix = '/twirp/xyzzy.XyzzyData/';
exports.createXyzzyData = function (baseURL, options) {
    if (options === void 0) { options = {}; }
    var defaultOpts = {
        baseURL: baseURL + exports.XyzzyDataPathPrefix,
        headers: {
            Accept: 'application/protobuf'
        }
    };
    var axiosOpts = __assign(__assign({}, defaultOpts), options);
    var axios = axios_1["default"].create(axiosOpts);
    return service_pb_1.xyzzy.XyzzyData.create(pbjs_twirp_1.createTwirpAdapter(axios, getServiceMethodName));
};
//# sourceMappingURL=service.twirp.js.map